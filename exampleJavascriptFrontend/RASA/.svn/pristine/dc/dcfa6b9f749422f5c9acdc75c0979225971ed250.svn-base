(function() {
  'use strict';

  /**
   * homepageCtrl : controller home page
   * @type {[type]}
   */
  angular.module(APP_NAME)
    .controller('homepageCtrl', homepageCtrl);

  /**
   * [homepageCtrl description]
   * @method homepageCtrl
   * @param  {[type]}     EVENTS [description]
   * @return {[type]}            [description]
   */
  function homepageCtrl($scope, $rootScope, $q, $state, $timeout, $mdDialog, $mdEditDialog, bvApiService, bvAlertService, bvBusyService, HomePageService, EVENTS) {

    // bp
    var vm = this;

    vm.testRest = testRest;
    vm.interview = interview;
    vm.login = login;
    vm.operativeSites = operativeSites;
    vm.library = library;

    // vars esposte
    vm.title = "REST ERRATO";

    // parte da qui
    init();

    /**
     * init della procedura
     * @method init
     * @return {[type]} [description]
     */
    function init() {

      vm.selected = [];
      vm.limitOptions = [5, 10, 15];

      vm.options = {
        rowSelection: true,
        multiSelect: true,
        autoSelect: true,
        decapitate: false,
        largeEditDialog: false,
        boundaryLinks: false,
        limitSelect: true,
        pageSelect: true
      };

      vm.query = {
        order: 'name',
        limit: 5,
        page: 1
      };

      vm.desserts = {
        "count": 9,
        "data": [{
          "name": "Frozen yogurt",
          "type": "Ice cream",
          "calories": { "value": 159.0 },
          "fat": { "value": 6.0 },
          "carbs": { "value": 24.0 },
          "protein": { "value": 4.0 },
          "sodium": { "value": 87.0 },
          "calcium": { "value": 14.0 },
          "iron": { "value": 1.0 }
        }, {
          "name": "Ice cream sandwich",
          "type": "Ice cream",
          "calories": { "value": 237.0 },
          "fat": { "value": 9.0 },
          "carbs": { "value": 37.0 },
          "protein": { "value": 4.3 },
          "sodium": { "value": 129.0 },
          "calcium": { "value": 8.0 },
          "iron": { "value": 1.0 }
        }, {
          "name": "Eclair",
          "type": "Pastry",
          "calories": { "value": 262.0 },
          "fat": { "value": 16.0 },
          "carbs": { "value": 24.0 },
          "protein": { "value": 6.0 },
          "sodium": { "value": 337.0 },
          "calcium": { "value": 6.0 },
          "iron": { "value": 7.0 }
        }, {
          "name": "Cupcake",
          "type": "Pastry",
          "calories": { "value": 305.0 },
          "fat": { "value": 3.7 },
          "carbs": { "value": 67.0 },
          "protein": { "value": 4.3 },
          "sodium": { "value": 413.0 },
          "calcium": { "value": 3.0 },
          "iron": { "value": 8.0 }
        }, {
          "name": "Jelly bean",
          "type": "Candy",
          "calories": { "value": 375.0 },
          "fat": { "value": 0.0 },
          "carbs": { "value": 94.0 },
          "protein": { "value": 0.0 },
          "sodium": { "value": 50.0 },
          "calcium": { "value": 0.0 },
          "iron": { "value": 0.0 }
        }, {
          "name": "Lollipop",
          "type": "Candy",
          "calories": { "value": 392.0 },
          "fat": { "value": 0.2 },
          "carbs": { "value": 98.0 },
          "protein": { "value": 0.0 },
          "sodium": { "value": 38.0 },
          "calcium": { "value": 0.0 },
          "iron": { "value": 2.0 }
        }, {
          "name": "Honeycomb",
          "type": "Other",
          "calories": { "value": 408.0 },
          "fat": { "value": 3.2 },
          "carbs": { "value": 87.0 },
          "protein": { "value": 6.5 },
          "sodium": { "value": 562.0 },
          "calcium": { "value": 0.0 },
          "iron": { "value": 45.0 }
        }, {
          "name": "Donut",
          "type": "Pastry",
          "calories": { "value": 452.0 },
          "fat": { "value": 25.0 },
          "carbs": { "value": 51.0 },
          "protein": { "value": 4.9 },
          "sodium": { "value": 326.0 },
          "calcium": { "value": 2.0 },
          "iron": { "value": 22.0 }
        }, {
          "name": "KitKat",
          "type": "Candy",
          "calories": { "value": 518.0 },
          "fat": { "value": 26.0 },
          "carbs": { "value": 65.0 },
          "protein": { "value": 7.0 },
          "sodium": { "value": 54.0 },
          "calcium": { "value": 12.0 },
          "iron": { "value": 6.0 }
        }]
      };

      vm.editComment = function(event, dessert) {
        event.stopPropagation(); // in case autoselect is enabled

        var editDialog = {
          modelValue: dessert.comment,
          placeholder: 'Add a comment',
          save: function(input) {
            if (input.$modelValue === 'Donald Trump') {
              input.$invalid = true;
              return $q.reject();
            }
            if (input.$modelValue === 'Bernie Sanders') {
              return dessert.comment = 'FEEL THE BERN!'
            }
            dessert.comment = input.$modelValue;
          },
          targetEvent: event,
          title: 'Add a comment',
          validators: {
            'md-maxlength': 30
          }
        };

        var promise;

        if (vm.options.largeEditDialog) {
          promise = $mdEditDialog.large(editDialog);
        } else {
          promise = $mdEditDialog.small(editDialog);
        }

        promise.then(function(ctrl) {
          var input = ctrl.getInput();

          input.$viewChangeListeners.push(function() {
            input.$setValidity('test', input.$modelValue !== 'test');
          });
        });
      };

      vm.toggleLimitOptions = function() {
        vm.limitOptions = vm.limitOptions ? undefined : [5, 10, 15];
      };

      vm.getTypes = function() {
        return ['Candy', 'Ice cream', 'Other', 'Pastry'];
      };

      vm.loadStuff = function() {
        vm.promise = $timeout(function() {
          // loading
        }, 2000);
      }

      vm.logItem = function(item) {
        console.log(item.name, 'was selected');
      };

      vm.logOrder = function(order) {
        console.log('order: ', order);
      };

      vm.logPagination = function(page, limit) {
        console.log('page: ', page);
        console.log('limit: ', limit);
      }

    }

    function interview() {
      $state.go("interview");
    }

    function login() {
      $state.go("loginpage");
    }

    function operativeSites() {
      $state.go("operativeSites");
    }

    /**
     * [stiaccia description]
     * @method stiaccia
     * @return {[type]} [description]
     */
    function testRest() {

      /*

      var defer1 = $q.defer();
      $timeout(function() {
        defer1.resolve();
        alert("ITA 1")
      }, 10000);
      bvBusyService.addPromise(defer1.promise);

      var defer2 = $q.defer();
      $timeout(function() {
        defer2.resolve();
        alert("ITA 2")
      }, 13000);
      bvBusyService.addPromise(defer2.promise);

      var defer3 = $q.defer();
      $timeout(function() {
        defer3.resolve();
        alert("ITA 3")
      }, 3000);
      bvBusyService.addPromise(defer3.promise);

      var defer4 = $q.defer();
      $timeout(function() {
        defer4.resolve();
        alert("ITA 4")
      }, 20000);
      bvBusyService.addPromise(defer4.promise);

      return;
      */

      HomePageService.login({ username: 'pollo', password: 'lesso' })
        .success(function(res) {
          //alert("OK");
        })
        .error(function(err) {
          //alert("ERRORE");
        });
    }

    function library() {
      $state.go("library");
    }
  }

}());
