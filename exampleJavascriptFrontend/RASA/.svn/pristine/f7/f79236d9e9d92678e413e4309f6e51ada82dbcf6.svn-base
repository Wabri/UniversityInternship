(function() {
  "use strict";

  angular.module(APP_NAME).directive("webcamCapture", webcamCapture);

  /**
   * bvWait : direttiva di attesa
   */
  function webcamCapture() {
    var directive = {
      restrict: "E",

      controller: controller,
      templateUrl: "common/directives/webcamCapture/webcamCapture.directive.html"
    };

    return directive;
  }


  /**
   *
   */
  function controller($scope, $rootScope, $q, $mdDialog, $timeout, EVENTS) {
    // $scope.capture2 = false;
    window.onload = function() {

      //Compatibility
      navigator.getUserMedia = navigator.getUserMedia || navigator.webkitGetUserMedia;

      $scope.canvas = document.getElementById("snapshot2");
      $scope.context = $scope.canvas.getContext("2d");
      $scope.video = document.getElementById("video");
      // debugger;
      $scope.btnStart = document.getElementById("btnStart");
      $scope.btnStop = document.getElementById("btnStop");
      $scope.btnPhoto = document.getElementById("btnPhoto");
      $scope.videoObj = {
        video: true,
        audio: false
      };


      $scope.btnStart.addEventListener("click", function() {
        var localMediaStream;
        // debugger;
        if (navigator.getUserMedia) {
          navigator.getUserMedia($scope.videoObj, function(stream) {
            $scope.video.src = (navigator.webkitGetUserMedia) ? window.URL.createObjectURL(stream) : stream;
            localMediaStream = stream;

          }, function(error) {
            console.error("Video capture error: ", error.code);
          });

          $scope.btnStop.addEventListener("click", function() {
            localMediaStream.stop();
          });

          $scope.btnPhoto.addEventListener("click", function() {

            $scope.context.drawImage($scope.video, 0, 0, 320, 240);

          });
        }
      });
    };
    // var vm = this;

    $scope.downloadCanvas2 = downloadCanvas2;


    function downloadCanvas2(link, canvasId, filename) {
      link.href = document.getElementById('snapshot2').toDataURL();
      link.download = filename;
    }

    /**
     * The event handler for the link's onclick event. We give THIS as a
     * parameter (=the link element), ID of the canvas and a filename.
     */
    document.getElementById('download2').addEventListener('click', function() {
      $scope.downloadCanvas2(this, 'canvas', 'image2.png');
    }, false);
  }



})();
