(function () {
    'use strict';
    angular.module('revux').directive('sidebar', function ($rootScope, $state, $stateParams, $timeout, StorageService, FunctionalityRolesService, Broadcaster,
                                                           Events, UtilsService, LoginService, ContractsService, DocumentsService, NewsService, menuService, countersPolling) {
        /**
         *
         * @param $scope
         * @param element
         */
        var link = function ($scope, element) {

            // parti da qui
            init();

            function init() {
                build();
            }

            /**
             * build
             */
            function build() {

                // i ruoli
                setFunctionaryRoles();

                // legge ed assegna i contratti possibili
                $scope.contracts = ContractsService.getList();

                //aggiunge alias
                angular.forEach($scope.contracts, function(contract) {
                    if (contract.contractAlias != null)
                    {
                        contract.contract = contract.contract + ' - ' + contract.contractAlias + '';
                    }
                });

                // seleziona il contratto
                var selectedContract = ContractsService.getSelected();
                if (selectedContract) {
                    $scope.selectedContract = UtilsService.findObjectById($scope.contracts, selectedContract.toString());





                    // fatture, messaggi e documenti
                    countersPolling.checkAllCounters();
                }
            }

            //******************************************************************************************************
            //                                       METODI interni
            //******************************************************************************************************
            /**
             * setFunctionaryRoles : functione che riassegna i diritti all'html
             */
            function setFunctionaryRoles() {

                var result;

                // menu HOME
                $scope.HOME = true;
                result = FunctionalityRolesService.getHomeState();
                if (!result || !result.roles.HOME_ROLE)
                    $scope.HOME = false;

                // menu ASSET
                $scope.ASSET = FunctionalityRolesService.assetRole;

                // menu DOCUMENTS
                $scope.DOCUMENTS = true;
                result = FunctionalityRolesService.getDocumentsState();
                if (!result || !result.active)
                    $scope.DOCUMENTS = false;


                // menu MOVEMENTI/PAGAMENTI
                $scope.BOOK = FunctionalityRolesService.bookRole;
                $scope.paymentsRole=FunctionalityRolesService.paymentsRole;
                // menu SETTINGS
                $scope.SETTINGS = true;
                result = FunctionalityRolesService.getSettingState();
                if (!result || !result.active)
                    $scope.SETTINGS = false;
            }

            //******************************************************************************************************
            //                                       METODI per HTML
            //******************************************************************************************************
            $scope.selectContract = function (contract) {

                if (contract) {
                    $rootScope.$broadcast(Events.CHANGE_CONTRACT, contract.id);
                } else {
                    $state.go('contracts.list');
                }
            };

            $scope.closeSidebar = function () {
                $rootScope.$broadcast(Events.SIDEBAR_CLOSE);
            };

            /**
             *
             * @param state
             */
            $scope.toggleMenu = function (state) {

                if ($state.current.name === state)
                    $rootScope.$broadcast(Events.SIDEBAR_CLOSE);
                else
                    $state.go(menuService.toggleMenu(state));       // FONDAMENTALE
            };

            /**
             *
             */
            $scope.changeContract = function () {
                $state.go('contracts.list');
            };

            //******************************************************************************************************
            //                                              WATCHCERS
            //******************************************************************************************************
            //per me Ã¨ da togliere
            $rootScope.$on(Events.REFRESH_MESSAGES_DOCUMENTS, function (event, params) {

                // fatture, messaggi e documenti
                countersPolling.checkAllCounters();
            })

            $scope.$on(Events.CHANGE_CONTRACT, function (event, params) {
                LoginService.loginContract(params).then(function (response) {
                    FunctionalityRolesService.getHttpRoles().then(function (response) {
                        // imposta i nuovi ruoli per il servizio che ricalcola le assegnazioni per html

                        FunctionalityRolesService.setRoles(response);
                        // salva il contratto appena scelto nello storage
                        ContractsService.setSelected(params)
                        // rilegge i contratti possibili
                        $scope.contracts = ContractsService.getList();
                        //aggiunge alias
                        angular.forEach($scope.contracts, function(contract) {
                            if (contract.contractAlias != null)
                            {
                                contract.contract = contract.contract + ' - ' + contract.contractAlias;
                            }
                        });
                        // imposta per la combo
                        $scope.selectedContract = UtilsService.findObjectById($scope.contracts, params.toString());

                        // fatture, messaggi e documenti
                        countersPolling.checkAllCounters();

                        // cerca di andare qui, ma poi decide il gestore dei permessei ( menuService )
                        $state.go('contract.home.homepage',{}, {'reload': true});

                        /*
                        if ($state.current.name == 'contract.home.homepage')
                            $state.reload();
                        else
                            $state.go('contract.home.homepage');
                        */

                    });
                });
            });
            // ha nuova assegnazione diritti
            $rootScope.$on(Events.ROLES_ASSIGNED, function () {
                //console.log("ROLES_ASSIGNED di sidebar");
                setFunctionaryRoles();
            });

            $rootScope.$on(Events.REFRESH_COUNT_HOME, function (event, countPaymentBill) {

                $scope.numberPaymentBill = countPaymentBill;
            });

            $scope.$on(Events.SIDEBAR_OPEN, function () {
                angular.element(element).children().addClass('sidebar-open');
                angular.element(document.querySelector('body')).addClass('block-scroll');
            });
            $scope.$on(Events.SIDEBAR_CLOSE, function () {
                //console.info("SIDEBAR_CLOSE")
                angular.element(element).children().removeClass('sidebar-open');
                angular.element(document.querySelector('body')).removeClass('block-scroll');
            });
            // All'avvio di una transizione, chiude la sidebar
            $scope.$on('$stateChangeStart', function () {
                //console.log('$stateChangeStart');
                $rootScope.$broadcast(Events.SIDEBAR_CLOSE);
            });

            // PARTE DI DOCUMENTI e MESSAGGI
            $rootScope.$on(Events.REFRESH_COUNT_DOCUMENTS, function (event, countDocumentNotRead) {

                //console.log("ROLES_ASSIGNED di tasbar")
                if ($scope.DOCUMENTS) {
                    $scope.numberDOC = countDocumentNotRead;
                }
            });
            $rootScope.$on(Events.REFRESH_COUNT_MESSAGE, function (event, countMessagesNotRead) {
                if ($scope.MSGS) {
                    $scope.numberMSG = countMessagesNotRead;
                }
            });

            $rootScope.$on(Events.REFRESH_CONTRACTS, function () {

                // legge ed assegna i contratti possibili
                $scope.contracts = ContractsService.getList();

                //aggiunge alias
                angular.forEach($scope.contracts, function(contract) {
                    if (contract.contractAlias != null)
                    {
                        contract.contract = contract.contract + ' - ' + contract.contractAlias + '';
                    }
                });

                // seleziona il contratto
                var selectedContract = ContractsService.getSelected();
                if (selectedContract) {
                    $scope.selectedContract = UtilsService.findObjectById($scope.contracts, selectedContract.toString());
                }

                });

        };
        return {
            templateUrl: 'common/directives/sidebar.html',
            restrict: 'E',
            link: link
        };
    });
})();
