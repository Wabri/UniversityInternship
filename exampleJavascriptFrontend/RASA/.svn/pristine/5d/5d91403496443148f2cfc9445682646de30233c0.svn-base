(function () {
    'use strict';
    angular.module('revux')
        .directive('tabsbar', function ($rootScope, $state, $stateParams, FunctionalityRolesService, Broadcaster, Events, UtilsService, NewsService) {

            /**
             *
             * @param $scope
             * @param attrs
             */
            function link($scope, attrs) {
                var build = function () {

                    $scope.SLIPS = FunctionalityRolesService.paymentsRole;


                    //console.log(" $scope.SLIPS di tasbar",  $scope.SLIPS)
                    //console.log(" $scope.MSGS di tasbar",  $scope.MSGS)

                    // invoka il servizio
                    // FunctionalityRolesService.setupFromFunctionalityRoles($scope);

                    /* mb
                     $scope.functionalityRoles = localStorageService.get('functionalityRoles');
                     var _roles = localStorageService.get('roles');
                     if (_roles) {
                     for (var key in $scope.functionalityRoles) {
                     $scope[key] = false;
                     //console.log('key ', key);
                     //console.log('evaluate -> ', evaluate($scope.functionalityRoles[key], _roles));
                     //console.log('$scope.functionalityRoles[key] ', $scope.functionalityRoles[key]);
                     $scope[key] = UtilsService.evaluate($scope.functionalityRoles[key], _roles);
                     }
                     }
                     */
                };


                $scope.hasSidebar = (attrs.hasSidebar === 'true');

                /*
                 $scope.$on(Events.CHANGE_CONTRACT, function () {
                 build();
                 });
                 */
                /*
                 //trap event to reset topbar, TODO: refactor this.
                 $scope.$on(Events.RESET_TASBAR, function () {




                 for (var key in $scope.functionalityRoles) {
                 $scope[key] = false;
                 }

                 build();
                 });
                 */
                // ha nuova assegnazione diritti
                $rootScope.$on(Events.ROLES_ASSIGNED, function () {
                    //console.log("ROLES_ASSIGNED di tasbar")
                    build();
                });
            }

            /**
             *
             * @param $scope
             * @param $translate
             */
            function barCtrl($scope, $translate) {
                /**
                 * logoutTaskBar : mb
                 */
                $scope.logoutTaskBar = function () {
                    $rootScope.$broadcast(Events.LOGOUT_TASBAR);
                }
            }

            return {
                templateUrl: 'common/directives/tabsbar.html',
                restrict: 'E',
                replace: true,
                link: link,
                controller: barCtrl
            };
        });
})();
