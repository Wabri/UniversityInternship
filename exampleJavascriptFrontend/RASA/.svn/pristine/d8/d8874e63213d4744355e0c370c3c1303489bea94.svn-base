(function() {
  'use strict';
  /**
   * config
   * @type {[type]}
   */
  angular
    .module(APP_NAME)
    .config(config);

  /**
   * [config description]
   * @method config
   * @param  {[type]} $stateProvider           [description]
   * @param  {[type]} $urlRouterProvider       [description]
   * @param  {[type]} tmhDynamicLocaleProvider [description]
   * @param  {[type]} bvBreakpointsService       [description]
   * @param  {[type]} $translateProvider       [description]
   * @param  {[type]} $httpProvider            [description]
   * @return {[type]}                          [description]
   */
  function config(tmhDynamicLocaleProvider, $translateProvider, $httpProvider, $urlRouterProvider, $locationProvider, CUSTOMIZE) {

    // default state
    $urlRouterProvider.otherwise('/home');

    // per traduzioni
    $translateProvider.useStaticFilesLoader({
      prefix: 'assets/autogenerated/i18n/',
      suffix: '.json'
    });
    $translateProvider.preferredLanguage(CUSTOMIZE.REGIONAL.defaultCulture);
    $translateProvider.useSanitizeValueStrategy(null); // mb - era escape

    // per locale angularjs
    tmhDynamicLocaleProvider.localeLocationPattern('vendors/angular-locale/angular-locale_{{locale}}.js');

    // GLOBAL HANDLING HTTP
    $httpProvider.interceptors.push('bvHttpInterceptor');

    // per evitare la cache delle chiamate REST
    $httpProvider.defaults.headers.common["Cache-Control"] = "no-cache";
    $httpProvider.defaults.headers.common.Pragma = "no-cache";
    $httpProvider.defaults.headers.common["If-Modified-Since"] = "0";
    $httpProvider.defaults.useXDomain = true;
    $httpProvider.defaults.headers.common = 'Content-Type: application/json';
    delete $httpProvider.defaults.headers.common['X-Requested-With'];

    // cookies
    //$httpProvider.defaults.withCredentials = true;

    $locationProvider.html5Mode({
      enabled: false,
      requireBase: false
    });
  }

}());