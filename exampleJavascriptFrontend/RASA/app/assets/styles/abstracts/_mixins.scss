// -----------------------------------------------------------------------------
// This file contains all application-wide Sass mixins.
// -----------------------------------------------------------------------------
/// Event wrapper
/// @author Harry Roberts
/// @param {Bool} $self [false] - Whether or not to include current selector
/// @link https://twitter.com/csswizardry/status/478938530342006784 Original tweet from Harry Roberts
@mixin on-event($self: false) {
    @if $self {
        &,
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }
    @else {
        &:hover,
        &:active,
        &:focus {
            @content;
        }
    }
}

/// Make a context based selector a little more friendly
/// @author Hugo Giraudel
/// @param {String} $context
@mixin when-inside($context) {
    #{$context} & {
        @content;
    }
}

@mixin clearfix {
    &::after {
        clear: both;
        content: ' ';
        display: table;
    }
}

@mixin shadow-float {
    box-shadow: 0 12px 15px 0 rgba(0, 0, 0, .22), 0 17px 20px 0 rgba(0, 0, 0, .12);
}

@mixin shadow-high {
    box-shadow: 0 5px 10px 0 rgba(0, 0, 0, .15), 0 4px 14px 0 rgba(0, 0, 0, .12);
}

@mixin shadow-mid {
    box-shadow: 0 3px 6px 0 rgba(0, 0, 0, .15), 0 2px 10px 0 rgba(0, 0, 0, .12);
}

@mixin shadow-low {
    box-shadow: 0 2px 2px 0 rgba(0, 0, 0, .14), 0 1px 5px 0 rgba(0, 0, 0, .12), 0 3px 1px -2px rgba(0, 0, 0, .2);
}

@mixin fontSize($size) {
    font-size: $size;
    font-size: calculateRem($size);
}

@mixin xs {
    @media (min-width: #{$xs-min-width}) and (max-width: #{$sm-min-width - rem(1)}) {
        @content;
    }
}

@mixin sm {
    @media (min-width: #{$sm-min-width}) and (max-width: #{$md-min-width - rem(1)}) {
        @content;
    }
}

@mixin md {
    @media (min-width: #{$md-min-width}) and (max-width: #{$lg-min-width - rem(1)}) {
        @content;
    }
}

@mixin lg {
    @media (min-width: #{$lg-min-width}) and (max-width: #{$xl-min-width - rem(1)}) {
        @content;
    }
}

@mixin xl {
    @media (min-width: #{$xl-min-width}) {
        @content;
    }
}

/**
ALTERNATIVA
*/

@mixin mobile {
    @media (min-width: #{$xs-min-width}) and (max-width: #{$sm-min-width - rem(1)}) {
        @content;
    }
}

@mixin tablet {
    @media (min-width: #{$sm-min-width}) and (max-width: #{$lg-min-width - rem(1)}) {
        @content;
    }
}

@mixin desktop {
    @media (min-width: #{$lg-min-width}) {
        @content;
    }
}

@mixin circleLoader($size: 24px, $color: #fff, $opacity: 0.8) {
    position: absolute;
    top: 50%;
    left: 50%;
    opacity: $opacity;
    content: '';
    border-radius: 50%;
    font-size: $size/4;
    width: 1em;
    height: 1em;
    margin: -0.5em 0 0 -0.5em;
    box-shadow: 0 -1.6em 0 0 rgba($color, 1), -1.12em -1.12em 0 0 rgba($color, .75), -1.6em 0 0 0 rgba($color, .50), -1.12em 1.12em 0 0 rgba($color, .25);
    animation: .85s circle-loader steps(8) infinite;
    @content;
}

@keyframes circle-loader {
    0% {
        transform: rotate(0deg);
    }
    100% {
        transform: rotate(360deg);
    }
}